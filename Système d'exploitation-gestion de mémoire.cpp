#include<stdio.h>  
#include<stdlib.h>
#include<string.h>
#include <time.h>
#include <unistd.h>
#include<conio.h>




int cl;      
void my_delay(int cl)    /*Pause l'application pour i ms*/
{
clock_t start,end;
start=clock();
while(((end=clock())-start)<=((cl*CLOCKS_PER_SEC)/1000));
}




typedef struct catalogue // Définir la structure catalogue //
{
char nom_fichier[30];
char id[30];
char emplacement[30];
int share_status;
 
}file,*cat;

int N = 0; // Nombre de cases d'allocation dynamique //




int Recherche_fichier(char nomfichier[30],char id[30],cat C,int N) //Fonction de la recherche d'un fichier concerné //
{
int i;
for(i=0;i<N;i++)
{
        if(strcmp(C[i].nom_fichier,nomfichier)==0 && strcmp(C[i].id,id)==0)
        {
            return i;
        }
}
return -1;
}



cat Ajout_Fichier(cat C,char nom1[30],char id1[30],int pp1,int n)  // Fonction d'ajout d'un fichier spécifié //
{
if(Recherche_fichier(nom1,id1,C,n) == -1)
{
        char y[30];
        char id[30];
        char nom[30];
        catalogue nouveau_fichier;
        strcpy(id , id1);
        strcpy(nom , nom1);
strcpy(nouveau_fichier.id ,id);
strcpy(nouveau_fichier.nom_fichier ,nom);
strcpy(y,"@");
strcat(y,nom1);
strcpy(nouveau_fichier.emplacement ,y);
nouveau_fichier.share_status =pp1;
        C[N] = nouveau_fichier;
return C;
}
else
printf("le fichier existe deja");

}



cat Changer_nom(char nom1[30],char id1[30],cat C,char nomn[30],int N) // Fonction qui consiste a changer le nom d'un fichier //
{    
if(Recherche_fichier(nom1,id1,C,N)==-1)
printf("le fichier n'existe pas");
else
{
char y[31];
int j;
   int i=Recherche_fichier(nom1,id1,C,N);

strcpy(C[i].nom_fichier,nomn);
strcpy(y,"@");
strcat(y,nomn);
strcpy(C[i].emplacement,y);
}
return C;
}




cat Supprimer_fichier(cat C,char nom1[30],char id1[30],int N)
{
int k,l;
 
    k=Recherche_fichier(nom1,id1,C,N);
    if(k!=-1)
    {
        for(l=k;l<N;l++)
        C[l]=C[l+1];
    }
    else
printf("le fichier n'existe pas");
    return C;
}




cat Partager_fichier(cat C,char nom1[30],char id1[30],int N)
{
int k=Recherche_fichier(nom1,id1,C,N);
if(k!=-1)
{
        C[k].share_status = 1;
        return C;
    }
else
printf("le fichier n'existe pas");
}
cat Restreindre_fichier(cat C,char nom1[30],char id1[30],int N)
{
int k=Recherche_fichier(nom1,id1,C,N);
if(k!=-1)
{
        C[k].share_status= 0;
        return C;
    }
else
printf("le fichier n'existe pas");
}



void Affichagelisteuser(int n,char id1[30],cat C)
{
  int i;
  for(i=0;i<n;i++)
    {
        if(strcmp(C[i].id,id1) == 0)
        {
         

            printf(" Nom d'utilisateur :   '%s\t\t",C[i].id);
            printf("Emplacement du fichier :  %s\t\t",C[i].emplacement);
            printf("Statut du partage : %d\t\t",C[i].share_status);
        }
    }
}





main()
{
int pp1;
char id1[30],nom1[30],idsearch[30],namesearch[30],nomn[30];

    cat C=(cat)malloc(sizeof(catalogue));

int choix;  
           
retourmenu:// label goto , afin de revenir chaque fois au menu //
printf("----------------------------MENU ---------------------------------\n\n\n");
printf("Veuillez choisir une action parmi les unes presentes ci-dessous : \n\n");
printf("1- Rechercher un fichier dans le catalogue . \n\n");
printf("2- Ajout d'un fichier au catalogue . \n\n");
printf("3- Changement de nom d'un fichier. \n\n");
printf("4- Suppression d'un fichier du catalogue . \n\n");
printf("5- Partage d'un fichier  . \n\n");
printf("6- Restreindre le partage d'un fichier . \n\n");
printf("7- Affichage liste de fichiers d'un utilisateur specifie . \n\n");
printf("8- Quitter . \n\n");
printf("-------------------------------------------------------------------\n\n\n");
            printf("\n Veuillez saisir votre choix :");
            scanf("%d",&choix);
            switch(choix)
            {
                    case 1: // Recherche d'un fichier donné //
                        {  char namesearch[30];
                           char idsearch[30];


   system("cls");
                            printf("donner le nom du fichier que vous cherchez");
                            scanf("%s",namesearch);
                            system("cls");
                            printf("donner l'id de l'utilisateur");
                            scanf("%s",idsearch);
                            system("cls");
                            if(Recherche_fichier(namesearch,idsearch,C,N)!=-1)
                            {
                          printf("-------------------BILAN DE RECHERCHE DU FICHIER :-----------------------------------\n\n ");
                            printf("Ce fichier qui porte le nom de : %s   existe !!!",namesearch);
                            printf("-----------------------------------------------------------------------------------\n\n ");
                            }
  else
  {
  printf("-------------------BILAN DE RECHERCHE DU FICHIER-----------------------------------\n\n ");
  printf("Ce fichier qui porte le nom de : %s  n'existe pas !!!",namesearch);
  printf("\n\n\n\n\n");
  printf("------------------------------------------------------------------------------");
  printf("\n\n\n\n\n");
   }
   
  printf("\nRetour au menu principal...");
  my_delay(5000);
   system("cls");
  goto retourmenu; // label goto , afin de revenir chaque fois au menu //

}break;
                       
                        case 2: // Ajout d'un fichier au catalogue //
                        {    
                            system("cls");
                            printf("Donner le nom du fichier a ajouter : ");
                            scanf("%s",nom1);
                            system("cls");
                            printf(" l'id de l'utilisateur : ");
                            scanf("%s",id1);
                            system("cls");
                            printf("Public 0 , Prive 1 : ");
                            scanf("%d",&pp1);
                              system("cls");
                            C=Ajout_Fichier(C,nom1,id1,pp1,N);
                            C =(cat) realloc(C,(N + 2)*sizeof(file));
                            N++;
                              printf("-------------------BILAN D'AJOUT DU FICHIER-----------------------------------\n\n ");
  printf("Ce fichier qui porte le nom de : %s a ete ajoute avec succes !!!",nom1);
  printf("\n\n\n\n\n");
  printf("------------------------------------------------------------------------------");
  printf("\n\n\n\n\n");
                            printf("\nRetour au menu principal...");
  my_delay(5000);
   system("cls");
  goto retourmenu;
                        }break;
                       
                    case 3: // Changement du nom du fichier //
                        {  
                            system("cls");
                            printf(" Donner le nom du fichier a changer : ");
                            scanf("%s",nom1);
                            system("cls");
                            printf("donner l'id de l'utilisateur concerne ");
                            scanf("%s",id1);
                            system("cls");
                            printf("donner le nouveau nom du fichier a adopter : ");
                            scanf("%s",nomn);
                            system("cls");
                            C=Changer_nom(nom1,id1,C,nomn,N);
                              system("cls");
                            printf("-------------------BILAN DE CHANGEMENT DE NOM DU FICHIER :-----------------------------\n\n ");
                            printf("\nCe fichier qui porte le nom de : %s  a ete change avec succes !!!\n",namesearch);
                            printf("-----------------------------------------------------------------------------------\n\n ");
                            printf("\n Retour au menu principal...\n");
  my_delay(5000);
   system("cls");
  goto retourmenu;
                           
                        }break;
                    case 4: // Supprimer un fichier du catalogue //
                        {    
                            system("cls");
                            printf("Donner le nom du fichier a supprimer du catalogue : ");
                            scanf("%s",nom1);
                            system("cls");
                            printf("Donner l'id de l'utilisateur : ");
                            scanf("%s",id1);
                            system("cls");
                           Supprimer_fichier(C,nom1,id1,N);
                           printf("-------------------BILAN DE SUPPRESSION DU FICHIER :-----------------------------\n\n ");
                            printf("\nCe fichier qui porte le nom de : %s  a ete supprime avec succes !!!\n",nom1);
                            printf("-----------------------------------------------------------------------------------\n\n ");
                            printf("\n Retour au menu principal...\n");
  my_delay(5000);
   system("cls");
  goto retourmenu;
                           
                        } break;
                       
                    case 5: // Partager un fichier //
                        {
                        system("cls");
                            printf("Donner le nom du fichier a partager : ");
                            scanf("%s",nom1);
                            system("cls");
                            printf("Donner l'id de l'utilisateur : ");
                            scanf("%s",id1);
                            system("cls");
                            C=Partager_fichier(C,nom1,id1,N);
                            printf("-------------------BILAN DE PARTAGE DU FICHIER :-----------------------------\n\n ");
                            printf("\nCe fichier qui porte le nom de : %s  a ete partage avec succes !!!\n",nom1);
                            printf("-----------------------------------------------------------------------------------\n\n ");
                            printf("\n Retour au menu principal...\n");
  my_delay(5000);
   system("cls");
  goto retourmenu;
                           
                           
                        }break;
                       
                    case 6: // Restreindre le partage du fichier //
                        {
                        system("cls");
                            printf(" Donner le nom du fichier a partager : ");
                            scanf("%s",nom1);
                            system("cls");
                            printf(" Donner l'id de l'utilisateur : ");
                            scanf("%s",id1);
                            system("cls");
                            if(Restreindre_fichier(C,nom1,id1,N)!=NULL);
                           
                            else
                            {
                            printf("-------------------BILAN DE RESTRICTION DU FICHIER :-----------------------------\n\n ");
                            printf("\nCe fichier qui porte le nom de : %s  a ete restreint des droits avec succes !!!\n",nom1);
                            printf("-----------------------------------------------------------------------------------\n\n ");
}
                            printf("\n Retour au menu principal...\n");
  my_delay(5000);
   system("cls");
  goto retourmenu;
                           
                           
                        }break;
                       
                    case 7: // Afficher la liste d'un utilisateur donné //
                        {  
                            system("cls");
                            printf("Donner l'id de l'utilisateur : ");
                            scanf("%s",id1);
                            system("cls");
                            printf("-------------------FICHIERS CORRESPONDANTS A %s :-----------------------------\n\n ",id1);
                           Affichagelisteuser(N,id1,C);
                            printf("-----------------------------------------------------------------------------------\n\n ");
                            printf("\n Retour au menu principal...\n");
  my_delay(5000);
   system("cls");
  goto retourmenu;
                           
                        } break;
                       
                       
                    case 8: // Quitter l'application //
                    {  
   system("cls");
                    printf("Fermeture de l'application ... ");
                    my_delay(3000);
                    exit(1);
                   
}
                }
        }


